// SPDX-License-Identifier: MIT
pragma solidity >=0.8.24;

/* Autogenerated file. Do not edit manually. */

import { SmartObjectData, SmartAssemblyType } from "./../../modules/smart-deployable/types.sol";
import { LocationTableData } from "./../tables/LocationTable.sol";

/**
 * @title ISmartDeployable
 * @dev This interface is automatically generated from the corresponding system contract. Do not edit manually.
 */
interface ISmartDeployable {
  function eveworld__registerDeployableToken(address tokenAddress) external;

  function eveworld__registerDeployable(
    uint256 entityId,
    SmartObjectData memory smartObjectData,
    uint256 fuelUnitVolumeInWei,
    uint256 fuelConsumptionPerMinuteInWei,
    uint256 fuelMaxCapacityInWei
  ) external;

  function eveworld__setSmartAssemblyType(uint256 entityId, SmartAssemblyType smartAssemblyType) external;

  function eveworld__destroyDeployable(uint256 entityId) external;

  function eveworld__bringOnline(uint256 entityId) external;

  function eveworld__bringOffline(uint256 entityId) external;

  function eveworld__anchor(uint256 entityId, LocationTableData memory locationData) external;

  function eveworld__unanchor(uint256 entityId) external;

  function eveworld__globalPause() external;

  function eveworld__globalResume() external;

  function eveworld__setFuelConsumptionPerMinute(uint256 entityId, uint256 fuelConsumptionPerMinuteInWei) external;

  function eveworld__setFuelMaxCapacity(uint256 entityId, uint256 capacityInWei) external;

  function eveworld__depositFuel(uint256 entityId, uint256 unitAmount) external;

  function eveworld__withdrawFuel(uint256 entityId, uint256 unitAmount) external;

  function eveworld__updateFuel(uint256 entityId) external;

  function eveworld__currentFuelAmount(uint256 entityId) external view returns (uint256 amount);

  function eveworld__currentFuelAmountInWei(uint256 entityId) external view returns (uint256 amount);
}
